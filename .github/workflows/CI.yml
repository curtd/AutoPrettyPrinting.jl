name: CI
on:
  push:
    branches:
      - main
    tags: ['*']
  pull_request:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.9'
          - '1.10'
          - 'nightly'
        os:
          - ubuntu-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v3
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
          show-versioninfo: true
      - uses: julia-actions/cache@v1
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
        with:
          annotate: true
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v3
        with:
            file: lcov.info
      - name: Submit coverage to Coveralls
        uses: coverallsapp/github-action@v2
        with:
            github-token: ${{ secrets.GITHUB_TOKEN }}
            path-to-lcov: lcov.info
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    permissions:
      contents: write
      statuses: write
    steps:
        - uses: actions/checkout@v4
        - uses: julia-actions/setup-julia@v1
          with:
            version: '1.9'
        - uses: julia-actions/cache@v1
        - name: Install dependencies
          run: julia --project=docs/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'
        - name: Build and deploy
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
            DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
          run: julia --project=docs/ docs/make.jl